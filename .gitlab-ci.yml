stages:
  - build
  - test
  - push
  - dast

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
  - .m2/repository

variables:
  CI_DEBUG_TRACE: "true"



build:
  stage: build
  image: maven:3-jdk-11-slim
  script:
    - mvn clean install -DskipTests
    - mvn package -B -e -DskipTests -Dmaven.repo.local=".m2/repository"
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - */Dockerfile
      - */target/
      #- webgoat-server/target/
      - .m2/


spotbugs-sast:
  dependencies:
    - build
  variables:
    MAVEN_REPO_PATH: ./.m2/repository 
    COMPILE: "false"
  artifacts:
    reports:
      sast: gl-sast-report.json


push:
  services:
  - name: docker:20.10.6-dind
  image: docker:20.10.6
  variables:
    DOCKER_DRIVER: overlay2 # not sure this is needed
  stage: push
  script:
    - cd webgoat-server
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --build-arg webgoat_version=v8.1.0 --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest


dast:
  variables:
    DAST_WEBSITE: http://webgoat:8080/WebGoat/
    DAST_AUTH_URL: http://webgoat:8080/WebGoat/login
    DAST_EXCLUDE_URLS: http://webgoat:8080/WebGoat/logout,http://webgoat:8080/WebGoat/login,http://webgoat:8080/WebGoat/login?logout
    DAST_FULL_SCAN_ENABLED: "true"
    DAST_USERNAME: testtest
    DAST_PASSWORD: password # use protected/masked variables, this is only for demonstration purposes
    DAST_USERNAME_FIELD: username
    DAST_PASSWORD_FIELD: password
    DAST_AUTH_REPORT: "true"
    DAST_AUTH_VERIFICATION_URL: "http://webgoat:8080/WebGoat/start.mvc#lesson/WebGoatIntroduction.lesson"
  before_script:
    - curl -vvv -X POST -d "username=testtest&password=password&matchingPassword=password&agree=agree&submit=Submit" "http://webgoat:8080/WebGoat/register.mvc"
    # ToDo: do all variables again as the DAST template does something weird
    - export DAST_WEBSITE=http://webgoat:8080/WebGoat/ 
    - export DAST_AUTH_URL=http://webgoat:8080/WebGoat/login
    - export DAST_EXCLUDE_URLS=http://webgoat:8080/WebGoat/logout,http://webgoat:8080/WebGoat/login,http://webgoat:8080/WebGoat/login?logout
    - export DAST_FULL_SCAN_ENABLED=true
    - export DAST_USERNAME=testtest
    - export DAST_PASSWORD=password # use protected/masked variables, this is only for demonstration purposes
    - export DAST_USERNAME_FIELD=username
    - export DAST_PASSWORD_FIELD=password
    - export DAST_AUTH_REPORT=true
    - export DAST_AUTH_VERIFICATION_URL="http://webgoat:8080/WebGoat/start.mvc#lesson/WebGoatIntroduction.lesson"
    - export DAST_ZAP_USE_AJAX_SPIDER=true
    #- export DAST_BROWSER_SCAN=true
    #- export DAST_BROWSER_ACTION_TIMEOUT="30s"
    #- DAST_BROWSER_NUMBER_OF_BROWSERS=3
    - export GIT_STRATEGY="fetch"
    #- export DAST_PATHS_FILE=dastpaths
    #- export DAST_PATHS="/WebGoat/start.mvc#lesson/SqlInjection.lesson/1,/WebGoat/start.mvc#lesson/SqlInjection.lesson/2,/WebGoat/start.mvc#lesson/SqlInjection.lesson/3,/WebGoat/start.mvc#lesson/SqlInjection.lesson/4,/WebGoat/start.mvc#lesson/SqlInjection.lesson/5"
  artifacts:
    paths: [gl-dast-debug-auth-report.html]
    when: always
  variables:
    DOCKER_DRIVER: overlay2
  services:
  - name: $CI_REGISTRY_IMAGE:latest
    alias: webgoat
