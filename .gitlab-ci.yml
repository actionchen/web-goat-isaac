
# This definition builds the container for WebGoat and uses SAST and SAST
# SAST might pass with a failure because of a missing Webwolf part but it can be ignored
# which would make a great use case why allowing failures can make sense
# Two DAST approaches can be applied: AJAX spider or Browser based crawling
# The latter is more efficient when it operates on WebGoat due to the way the WebGoat navigation is set up
# The latter approach requires around 2h which is not unusual for some applications
# AJAX spider only reveals a subset of findings
# In this project the WebGoat container has been used as a service so we can avoid deployment
# It is probably not the most efficient way but pretty good for this demo project.
# There seems to be a silly bug that the variables part is not respected: ToDo

stages:
  - build
  - test
  - push

services:
  - name: docker:dind
    alias: dind



  
cache:
  policy: pull
  key: ${CI_COMMIT_SHA}
  paths:
  - .m2/

variables:
  CI_DEBUG_TRACE: "true"
  SECURE_LOG_LEVEL: "debug" # pretty helpful when you get errors like exit 1

 

build:
  stage: build
  image: maven:3-jdk-11-slim
  script:
    - mvn clean install -DskipTests # to shorten the build
    - mvn package -DskipTests -Dmaven.repo.local=./.m2 # -DskipTests
  cache:
    policy: push
    key: ${CI_COMMIT_SHA}
    paths:
      - .m2
  artifacts:
    paths:
      - "webgoat-server/Dockerfile"
      - "webgoat-server/target/webgoat-server-v8.1.0.jar"
    # reports:
    #   junit:
    #   - ./webgoat-integration-tests/target/surefire-reports/TEST-*.xml
    #   - ./webwolf/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-container/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/jwt/target/surefire-reports/TEST-*.xml      - ./webgoat-lessons/bypass-restrictions/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/crypto/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/missing-function-ac/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/cross-site-scripting/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/xxe/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/insecure-deserialization/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/path-traversal/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/csrf/target/surefire-reports/TEST-*.xml      
    #   - ./webgoat-lessons/chrome-dev-tools/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/vulnerable-components/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/challenge/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/http-proxies/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/cia/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/sql-injection/target/surefire-reports/TEST-*.xml
    #   - ./webgoat-lessons/client-side-filtering/target/surefire-reports/TEST-*.xml




push:
  services:
  - name: docker:20.10.6-dind
  image: docker:20.10.6
  variables:
    DOCKER_DRIVER: overlay2 # not sure this is needed
  stage: push
  needs: [build]
  script:
    - cd webgoat-server
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --build-arg webgoat_version=v8.1.0 --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

