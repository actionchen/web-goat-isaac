# This definition builds the container for WebGoat and uses SAST and SAST
# SAST might pass with a failure because of a missing Webwolf part but it can be ignored
# which would make a great use case why allowing failures can make sense
# Two DAST approaches can be applied: AJAX spider or Browser based crawling
# The latter is more efficient when it operates on WebGoat due to the way the WebGoat navigation is set up
# The latter approach requires around 2h which is not unusual for some applications
# AJAX spider only reveals a subset of findings
# In this project the WebGoat container has been used as a service so we can avoid deployment
# It is probably not the most efficient way but pretty good for this demo project.
# There seems to be a silly bug that the variables part is not respected: ToDo

#  story of DAST https://about.gitlab.com/blog/2022/10/19/browser-based-dast-feature-announcement/
# https://about.gitlab.com/blog/2020/08/31/how-to-configure-dast-full-scans-for-complex-web-applications/
default:
  tags: [ saas-linux-large-amd64 ] # targeting a more powerful runner

stages:
  - build
  - analyze
  - test
  - push
  - dast

services: # we need a service for DAST, see below
  - name: docker:dind
    alias: dind

variables:
  CI_DEBUG_TRACE: "true"
  SECURE_LOG_LEVEL: "debug" # pretty helpful when you get errors like exit 1

include: # security templates
  - template: SAST.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml
  # Command + K, then Command + U remove line comment
  # Command + K, Command + C set line comment
  # - template: Security/Secret-Detection.gitlab-ci.yml
  # - template: Code-Quality.gitlab-ci.yml
  # - template: Security/License-Scanning.gitlab-ci.yml
  # - template: Security/Dependency-Scanning.gitlab-ci.yml

 
build:
  stage: build
  image: maven:3-jdk-11-slim
  script:
    - mvn clean install  # -DskipTests to shorten the build
    - mvn package -Dmaven.repo.local=./.m2 # -DskipTests
  artifacts:
    paths:
      - "webgoat-server/Dockerfile"
      - "webgoat-server/target/webgoat-server-v8.1.0.jar"
    reports:
      junit:
      - ./webgoat-integration-tests/target/surefire-reports/TEST-*.xml
      - ./webwolf/target/surefire-reports/TEST-*.xml
      - ./webgoat-container/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/jwt/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/bypass-restrictions/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/crypto/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/missing-function-ac/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/cross-site-scripting/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/xxe/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/insecure-deserialization/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/path-traversal/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/csrf/target/surefire-reports/TEST-*.xml      
      - ./webgoat-lessons/chrome-dev-tools/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/vulnerable-components/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/challenge/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/http-proxies/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/cia/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/sql-injection/target/surefire-reports/TEST-*.xml
      - ./webgoat-lessons/client-side-filtering/target/surefire-reports/TEST-*.xml

push:
  services:
  - name: docker:20.10.6-dind
  image: docker:20.10.6
  variables:
    DOCKER_DRIVER: overlay2 # not sure this is needed
  stage: push
  needs: [build]
  script:
    - cd webgoat-server
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --build-arg webgoat_version=v8.1.0 --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

# editor complains ?

dast:
  needs: [push]
  # timeout: 3 hours 30 minutes
  variables: # tweaking scanner
    # https://docs.gitlab.com/ee/user/application_security/dast/proxy-based.html#available-cicd-variables
    # https://docs.gitlab.com/ee/user/application_security/dast/browser_based.html#available-cicd-variables
    DAST_WEBSITE: http://webgoat:8080/WebGoat/
    # https://docs.gitlab.com/ee/user/application_security/dast/authentication.html # second demo JuiceShop for different 
    # https://docs.gitlab.com/ee/user/application_security/dast/authentication.html#prerequisites
    # https://docs.gitlab.com/ee/user/application_security/dast/authentication.html#known-limitations
    DAST_AUTH_URL: http://webgoat:8080/WebGoat/login
    DAST_AUTH_VERIFICATION_URL: "http://webgoat:8080/WebGoat/start.mvc#lesson/WebGoatIntroduction.lesson"
    DAST_EXCLUDE_URLS: http://webgoat:8080/WebGoat/logout,http://webgoat:8080/WebGoat/login,http://webgoat:8080/WebGoat/login?logout
    DAST_USERNAME: testtest # created by curl command below
    DAST_PASSWORD: password # use protected/masked variables, this is only for demonstration purposes, created by curl command below
    DAST_USERNAME_FIELD: username 
    DAST_PASSWORD_FIELD: password
    DAST_AUTH_REPORT: "true"
    
    # https://docs.gitlab.com/ee/user/application_security/dast/dast_troubleshooting.html proxy-based

    DAST_FULL_SCAN_ENABLED: "true"
    # DAST_USE_AJAX_SPIDER: "true"
   
    # Command + K, then Command + U remove line comment
    # Command + K, Command + C set line comment
    DAST_BROWSER_SCAN: "true" # https://docs.gitlab.com/ee/user/application_security/dast/browser_based_troubleshooting.html#any-reason-why-dast-would-not-work
    DAST_BROWSER_ACTION_TIMEOUT: "30s"
    DAST_BROWSER_NUMBER_OF_BROWSERS: 5 # providing more ressources if available
    DAST_BROWSER_MAX_DEPTH: 20
    DAST_BROWSER_PASSIVE_CHECK_WORKERS: 5 # providing more ressource if available
    DAST_BROWSER_CRAWL_GRAPH: "true"
    # DAST_BROWSER_LOG: "auth:debug"
    # DAST_BROWSER_FILE_LOG: "loglevel:debug"
    # DAST_BROWSER_FILE_LOG_PATH: "/zap/wrk/dast-scan.log"

  before_script:
    # we need to add a user first in order for forms based auth. http://127.0.0.1:8000/WebGoat/registration right-click inspect on fields
    # https://gitlab.com/mbrandner-group/web-goat-isaac/-/wikis/WebGoat
    - curl -vvv -X POST -d "username=testtest&password=password&matchingPassword=password&agree=agree&submit=Submit" "http://webgoat:8080/WebGoat/register.mvc"   
    - echo "In case of error you might want to set SECURE_LOG_LEVEL to a value of debug "
  artifacts:
    paths: [gl-dast-debug-auth-report.html, gl-dast-crawl-graph.svg]  # , dast-scan.log] # DAST_AUTH_REPORT, DAST_BRWOSER_*_LOG
    when: always
  services: # trick! not for production! https://docs.gitlab.com/ee/user/application_security/dast/#docker-services
  # WebGoat is only applied as a service here to avoid deployment for demo purposes  
  - name: $CI_REGISTRY_IMAGE:latest
    alias: webgoat
